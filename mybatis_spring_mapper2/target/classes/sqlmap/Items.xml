<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，为了对sql语句进行隔离，方便管理 ，mapper开发dao方式，使用namespace有特殊作用 mapper代理开发时将namespace指定为mapper接口的全限定名 -->
<mapper namespace="com.mapper.ItemsMapper">
	<!-- 在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 mapper.xml以statement为单位管理sql语句 -->
	
	<insert id="insertOne" parameterType="com.entity.Items">
		<selectKey resultType="java.lang.Integer" order="BEFORE"
			keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into items
		(name,price,detail,createTime)values(#{name},#{price},#{detail},#{createTime})
		
	</insert>
	<select id="selectAll" resultType="com.entity.Items">
		select * from items
	
	</select>
	<update id="update" parameterType="com.entity.Items" >
	
		update items set name=#{name},price=#{price},detail=#{detail},createTime=#{createTime} where id= #{id}
	</update>
	<delete id="deleteById" parameterType="int">
		delete from items where id=#{id}
	
	</delete>	
	<!-- <insert id="uuid" parameterType="com.entity.User" >
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			SEELCT UUID()
		</selectKey>
	insert into user
		(id,username,birthday,sex,address)values(#{id},#{username},#{birthday},#{sex},#{address})
	</insert> -->


</mapper>